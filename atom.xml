<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I'm Viecks]]></title>
  <link href="http://viecks.info/atom.xml" rel="self"/>
  <link href="http://viecks.info/"/>
  <updated>2014-06-03T15:36:31+08:00</updated>
  <id>http://viecks.info/</id>
  <author>
    <name><![CDATA[viecks]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[blog空间又从github挪到gitcafe了……]]></title>
    <link href="http://viecks.info/blog/2014/06/03/blogkong-jian-you-cong-githubnuo-dao-gitcafeliao-dot-dot-dot/"/>
    <updated>2014-06-03T15:18:25+08:00</updated>
    <id>http://viecks.info/blog/2014/06/03/blogkong-jian-you-cong-githubnuo-dao-gitcafeliao-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>聊天时候同组的一个汉子介绍说Gitcafe也提供了类似Github Pages的功能，同时访问速度还秒出Github几条街，心动了……</p>

<p>去Gitcafe官网看了一下，速度确实比Github快的多（毕竟更多的面向国内用户），开源项目有512M的空间可用，同时也有Gitcafe Pages功能，设定独立域名也比Github要省心，不用费劲写啥CNAME文件，直接A过去就好，所以一心动，就迁移过去了……</p>

<!--more-->

<h3 id="gitcafe">第一步：去Gitcafe注册一个账号：</h3>

<p>此处略过500字……</p>

<h3 id="gitcafe-1">第二部：在Gitcafe上创建一个和注册账号同名的项目：</h3>

<p>参见下图：
<img src="http://viecks.info/image/attaches/ef3f6e120cb81a23774dbff42702b465.png" alt="" /></p>

<h3 id="octopressbloggitcafe">第三步：配置octopress提交生成的blog文件到Gitcafe：</h3>

<p>在Rakefile中增加以下代码（搜索“Github Pages deploy complete”，插入在其下面）：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">system</span> <span class="s2">&quot;git remote add gitcafe git@gitcafe.com:viecks/viecks.git &gt;&gt; /dev/null 2&gt;&amp;1&quot;</span>
</span><span class="line"><span class="nb">system</span> <span class="s2">&quot;git push -u gitcafe master:gitcafe-pages</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这步完成后，就可以输入viecks.gitcafe.com看下blog是否已经可以正常展示了。</p>

<h3 id="section">第四步：自定义域名：</h3>

<p>不细说了，直接看图：</p>

<p><img src="http://viecks.info/image/attaches/33cbe26e9fce06680238ec804098a2b5.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个百度百家的RSS生成器]]></title>
    <link href="http://viecks.info/blog/2014/05/26/%5B%3F%5D-ge-bai-du-bai-jia-de-rsssheng-cheng-qi/"/>
    <updated>2014-05-26T19:13:58+08:00</updated>
    <id>http://viecks.info/blog/2014/05/26/[?]-ge-bai-du-bai-jia-de-rsssheng-cheng-qi</id>
    <content type="html"><![CDATA[<p>最近一段时间看<strong>百度百家</strong>的喷文比较多，由于经常是在移动端阅读，除了一个笨重的《百度新闻》客户端以外没有找到合适的<strong>百度百家</strong>阅读器。</p>

<p>本来想自己做一个，实在是懒得动手，最后决定搞个百度百家的RSS Generator算了……</p>

<p>这个玩意儿基于百度新闻移动端使用的API获取数据，由于百度图床防盗链的机制，偶尔可能会出现图片显示不正常的情况……</p>

<p>目前部署在SAE上，提供了百度百家在移动端的六个分类的RSS接口，各自的url如下：</p>

<ul>
  <li>
    <p>百家热点：<a href="http://1.baijiarss.sinaapp.com/subscribe?sid=611">点我</a></p>
  </li>
  <li>
    <p>百家互联网：<a href="http://1.baijiarss.sinaapp.com/subscribe?sid=612">点我</a></p>
  </li>
  <li>
    <p>百家文化：<a href="http://1.baijiarss.sinaapp.com/subscribe?sid=613">点我</a></p>
  </li>
  <li>
    <p>百家娱乐：<a href="http://1.baijiarss.sinaapp.com/subscribe?sid=614">点我</a></p>
  </li>
  <li>
    <p>百家体育：<a href="http://1.baijiarss.sinaapp.com/subscribe?sid=615">点我</a></p>
  </li>
  <li>
    <p>百家财经：<a href="http://1.baijiarss.sinaapp.com/subscribe?sid=616">点我</a></p>
  </li>
</ul>

<p>也可以直接去<a href="http://1.baijiarss.sinaapp.com">http://1.baijiarss.sinaapp.com</a>看目前支持的分类频道，后续如果有增加会在这里加上(HTML苦手写的页面凑合看吧……)</p>

<p><img src="http://viecks.gitcafe.com/images/attaches/1dfd8219dc3971bb6d163b1818fb7755.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[全新环境下拉取octopress源码重新generate后部署到github时git push报错的解决方法]]></title>
    <link href="http://viecks.info/blog/2014/05/19/quan-xin-huan-jing-xia-la-qu-octopressyuan-ma-zhong-xin-generatehou-bu-shu-dao-githubshi-git-pushbao-cuo-de-jie-jue-fang-fa/"/>
    <updated>2014-05-19T16:40:48+08:00</updated>
    <id>http://viecks.info/blog/2014/05/19/quan-xin-huan-jing-xia-la-qu-octopressyuan-ma-zhong-xin-generatehou-bu-shu-dao-githubshi-git-pushbao-cuo-de-jie-jue-fang-fa</id>
    <content type="html"><![CDATA[<p>今天在另外一台机器上从github拉取blog的源码，执行<code>rake setup_github_pages</code>，编译并使用<code>rake deploy</code>部署时出错，错误信息为：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">## Pushing generated _deploy website</span>
</span><span class="line">To git@github.com:viecks/viecks.github.io.git
</span><span class="line"> ! <span class="o">[</span>rejected<span class="o">]</span>        master -&gt; master <span class="o">(</span>non-fast-forward<span class="o">)</span>
</span><span class="line">error: failed to push some refs to <span class="s1">&#39;git@github.com:viecks/viecks.github.io.git&#39;</span>
</span><span class="line">hint: Updates were rejected because the tip of your current branch is behind
</span><span class="line">hint: its remote counterpart. Integrate the remote changes <span class="o">(</span>e.g.
</span><span class="line">hint: <span class="s1">&#39;git pull ...&#39;</span><span class="o">)</span> before pushing again.
</span><span class="line">hint: See the <span class="s1">&#39;Note about fast-forwards&#39;</span> in <span class="s1">&#39;git push --help&#39;</span> <span class="k">for </span>details.
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<p>从错误信息看，应该是本地数据太旧了，按说pull一次再push就可以了，但是<code>git pull</code>后提示内容已经是最新的了：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">Already up-to-date.
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>git pull</code>之后重新<code>rake deploy</code>错误依旧。</p>

<p>尝试用<code>git push -f</code>强制push覆盖也没生效。</p>

<p>后来不使用<code>rake setup_github_pages</code>，直接调用git命令生成_deploy目录后问题解决：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">mkdir _deploy
</span><span class="line"><span class="nb">cd </span>_deploy
</span><span class="line">git init
</span><span class="line">git remote add -t master -f origin git@github.com:viecks/viecks.github.io.git
</span><span class="line">rake deploy
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>具体原因不明，有明白的同学可以给我讲讲……</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让Slideshow也Markdown起来的Deckset]]></title>
    <link href="http://viecks.info/blog/2014/05/15/rang-slideshowye-markdownqi-lai-de-deckset/"/>
    <updated>2014-05-15T14:33:48+08:00</updated>
    <id>http://viecks.info/blog/2014/05/15/rang-slideshowye-markdownqi-lai-de-deckset</id>
    <content type="html"><![CDATA[<p>由于工作的原因，经常需要写一些会议或者讲座使用的PPT，最近开始尝试使用Deckset做大部分用到的演示PPT，感觉还不错。</p>

<p>Deckset是干什么用的呢？套用其官网的一句话：</p>

<blockquote>
  <p>Great-looking slides from simple Markdown files Write down your thoughts in your favourite text editor, and Deckset will turn them into beautiful presentations.</p>
</blockquote>

<p>简单说，Deckset就是Markdown-&gt;Slides的一个Render程序，那么Deckset提供了哪些不同于传统PPT（如Powerpoint、Keynote等）软件的特性呢？</p>

<!--more-->

<p>打开Deckset以后，我们首先看到了下面的界面：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/31d3537258cdf1733b0930c55c25467a.png" alt="" /></p>

<p>这里，Deckset提供了3个展示不同特点的Examples来帮助人们尽快熟悉Deckset的使用，我们双击第一个<em>“Deckset basics”</em>看下Deckset的基本特性。</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/f5631f0314455af3f48fc00211f353a2.png" alt="" /></p>

<p>打开“Deckset basics”以后，在标题栏区域可以看到，“Deckset basics”这个slide是由“Deckset basics.md”这个Markdown文件描述的，我们点击上方的<code>Edit</code>按钮看下这个Markdown文件：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/d6c599e535cb54ddfbbf616973aa8b7c.png" alt="" /></p>

<p>Deckset本身并没有提供Markdown的编辑功能，而是将编辑功能交给了用户系统上已经安装的Markdown编辑程序或字处理程序，这里弹出了Mou。</p>

<p>关掉Mou，回过头来看Deckset提供的这个Example，我们可以有重点的看下Deckset提供的一些最吸引我个人特性：</p>

<p><strong>Deckset基于标准的Markdown语法来写slide，意味着我们可以享受到所有Markdown的优势</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/77c62e2aa9e6b6d6cc6a83e5579128a0.png" alt="" /></p>

<p><strong>Deckset支持代码的语法高亮，对于我这种程序狗来说，这个应该是最吸引我的一点了，:D</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/62197b021d63cb4c88358ba422db0589.png" alt="" /></p>

<p><strong>Deckset中使用的图片支持模糊过滤的效果，使得浮在图片上的文字可以看得更清晰</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/5a8ea27256898684d188d8576eba9d96.png" alt="" /></p>

<p><strong>当然，简单的图文混排也不是问题</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/de9d89954406e5264682257ef771e662.png" alt="" /></p>

<p><strong>恩，嵌入一个视频也是可以滴</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/21070d9d1e379b7408cea93e6e67e96c.png" alt="" /></p>

<p><strong>Speaker notes的支持也有，虽然还有些薄弱</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/ec338aa03f9a2f5ed5223486d59a353d.png" alt="" /></p>

<p><strong>多套主题可以随意选用，而且由于基于Markdown，样式与内容是完全分开的，也就是说我们即使写完了slide，也可以随意调整主题风格</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/467de6ec4d450e4eac55eeb939789142.png" alt="" /></p>

<p><strong>主题修改后，图片的过滤效果也会跟着改变以适应该主题</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/fdf0d37b12365876fb6d143c0c68f4aa.png" alt="" /></p>

<p><strong>如果担心Markdown写的slide不好转给其他童鞋的话，我们还可以导出PDF格式的slide</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/6eb2a2eeac254ab3776b08392ab249dc.png" alt="" /></p>

<p><strong>导出后的PDF文件，格式得到了完美的保留（虽然视频没法播放了……）</strong></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/38a65c6c88f72a289411f16e9cc98591.png" alt="" /></p>

<p>以上基本上列出了Deckset的一些比较吸引人的特性，当然，目前阶段Deckset也有一些不足，</p>

<ul>
  <li>只能使用官方提供的Theme，没有自定义Theme的功能；</li>
  <li>没有提供任何动画效果；</li>
  <li>Speaker Note功能比较薄弱；</li>
  <li>导出功能只能导出PDF，要是支持PPT和keynote的格式就更好了；</li>
</ul>

<p>不过瑕不掩瑜，对于大部分时候我用到的功能，Deckset都已经做得不错了，尤其是<em>代码语法高亮</em>，大爱呀，希望后续Deckset可以越做越好，也希望喜欢这款软件的同学可以去支持一下正版。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简化静态博客发图的Alfred工作流]]></title>
    <link href="http://viecks.info/blog/2014/05/13/jian-hua-jing-tai-bo-ke-fa-tu-de-alfredgong-zuo-liu/"/>
    <updated>2014-05-13T19:16:40+08:00</updated>
    <id>http://viecks.info/blog/2014/05/13/jian-hua-jing-tai-bo-ke-fa-tu-de-alfredgong-zuo-liu</id>
    <content type="html"><![CDATA[<p>今天把自己的blog迁到了github上，为了解决图片加载慢的问题又用了qiniudn做图床加速。没想到用力太猛，贴图比之前更麻烦了。。。没办法，用Alfred写了个Workflow，一劳永逸的解决贴图的问题吧……</p>

<!--more-->

<p>使用octopress写文章，贴图的常见流程是：</p>

<ol>
  <li>随便找个工具或者用系统工具截图；</li>
  <li>将截图存储到桌面或者随便什么地方；</li>
  <li>修改截图文件名；</li>
  <li>将截图放到octopress/source/images/….去；</li>
  <li>在文档中写上图片的Markdown标签，指向图片；</li>
</ol>

<p>在我no zuo no die的用了第三方网站做图床以后，又多了一步：</p>

<ul>
  <li>在图片Markdown标签中加上图床的url前缀；</li>
</ul>

<p>我擦……这事儿干下来基本上写文的一点儿激情就都烟消云散了……</p>

<p>这个写稿贴图的事儿最好可以简化成这样就爽到了：</p>

<ol>
  <li>随便找个玩意儿截图到剪贴板；</li>
  <li>按个快捷键把Markdown的Url给粘贴到正在写的文档中；</li>
</ol>

<p>恩，就这两步，剩下的恶心事儿最好都有人帮着做了就爽了……</p>

<p>网上搜了半天，没找到现成的东西%&gt;_&lt;%，难道大家都这么苦日子过着？？</p>

<p>好吧，发扬懒人改变世界的精神，自己动手丰衣足食吧……</p>

<p>先打开自己最爱的Alfred，新建一个Workflow（注意，必须是由Powerpack的版本哦~~）：</p>

<p>加个Hotkey的Triggers，写上自己熟悉的热键作为粘贴的热键使用：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/e3840d6cc172bc918c5121ba9179ebc6.png" alt="" /></p>

<p>由于我直接用QQ截图，QQ热键是Ctrl+Cmd+A，所以就直接设置Ctrl+Cmd+V了……</p>

<p>接下来要加一个Actions，本来打算用NSAppleScript的，但是从AppleScript编辑器里粘过去的代码死活不work，没辙，改用<code>Run Script</code>的Action了。</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/b78a14c1c9864d77a24f49bccb451f78.png" alt="" /></p>

<p>双击Action，Language选择<code>/usr/bin/osascript</code>，把下面的代码粘贴到<code>Script</code>区域：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span class="k">property</span> <span class="nv">fileTypes</span> <span class="p">:</span> <span class="p">{</span><span class="se">¬</span>
</span><span class="line">	<span class="p">{</span>«<span class="nb">class PNGf</span>»<span class="p">,</span> <span class="s2">&quot;.png&quot;</span><span class="p">},</span> <span class="se">¬</span>
</span><span class="line">	<span class="p">{</span><span class="nv">JPEG</span> <span class="nv">picture</span><span class="p">,</span> <span class="s2">&quot;.jpg&quot;</span><span class="p">}}</span>
</span><span class="line">
</span><span class="line"><span class="k">on</span> <span class="nv">getType</span><span class="p">()</span> <span class="c">--判断剪贴板中的数据类型，暂时只支持png和jpg，优先用png</span>
</span><span class="line">	<span class="k">repeat</span> <span class="nv">with</span> <span class="nv">aType</span> <span class="k">in</span> <span class="nv">fileTypes</span>
</span><span class="line">		<span class="k">repeat</span> <span class="nv">with</span> <span class="nv">theInfo</span> <span class="k">in</span> <span class="p">(</span><span class="nb">clipboard info</span><span class="p">)</span>
</span><span class="line">			<span class="k">if</span> <span class="p">(</span><span class="nb">first</span> <span class="nb">item</span> <span class="k">of</span> <span class="nv">theInfo</span><span class="p">)</span> <span class="ow">is equal</span> <span class="k">to</span> <span class="p">(</span><span class="nb">first</span> <span class="nb">item</span> <span class="k">of</span> <span class="nv">aType</span><span class="p">)</span> <span class="k">then</span> <span class="no">return</span> <span class="nv">aType</span>
</span><span class="line">		<span class="k">end</span> <span class="k">repeat</span>
</span><span class="line">	<span class="k">end</span> <span class="k">repeat</span>
</span><span class="line">	<span class="no">return</span> <span class="no">missing value</span>
</span><span class="line"><span class="k">end</span> <span class="nv">getType</span>
</span><span class="line">
</span><span class="line"><span class="k">set</span> <span class="nv">theType</span> <span class="k">to</span> <span class="nv">getType</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="nv">theType</span> <span class="ow">is not</span> <span class="no">missing value</span> <span class="k">then</span>
</span><span class="line">	<span class="k">set</span> <span class="nv">filePath</span> <span class="k">to</span> <span class="s2">&quot;/Users/viecks/Datas/Blog/octopress/source/images/attaches/&quot;</span> <span class="c">--这里换成你自己放置图片的路径</span>
</span><span class="line">	<span class="k">set</span> <span class="nv">fileName</span> <span class="k">to</span> <span class="nb">do shell script</span> <span class="s2">&quot;date \&quot;+%Y%m%d%H%M%S\&quot; | md5&quot;</span> <span class="c">--用当前时间的md5值做文件名</span>
</span><span class="line">	<span class="k">if</span> <span class="nv">fileName</span> <span class="ow">does</span> <span class="ow">not</span> <span class="ow">end with</span> <span class="p">(</span><span class="nb">second</span> <span class="nb">item</span> <span class="k">of</span> <span class="nv">theType</span><span class="p">)</span> <span class="k">then</span> <span class="k">set</span> <span class="nv">fileName</span> <span class="k">to</span> <span class="p">(</span><span class="nv">fileName</span> <span class="o">&amp;</span> <span class="nb">second</span> <span class="nb">item</span> <span class="k">of</span> <span class="nv">theType</span> <span class="k">as </span><span class="nc">text</span><span class="p">)</span>
</span><span class="line">	<span class="k">set</span> <span class="nv">markdownUrl</span> <span class="k">to</span> <span class="s2">&quot;![](http://attaches-mirror.qiniudn.com/images/attaches/&quot;</span> <span class="o">&amp;</span> <span class="nv">fileName</span> <span class="o">&amp;</span> <span class="s2">&quot;)&quot;</span> <span class="c">--这里如果没有用到图床，就把前面前缀去掉，用到的话换成你自己图床的url</span>
</span><span class="line">	<span class="k">set</span> <span class="nv">filePath</span> <span class="k">to</span> <span class="nv">filePath</span> <span class="o">&amp;</span> <span class="nv">fileName</span>
</span><span class="line">	
</span><span class="line">	<span class="k">try</span>
</span><span class="line">		<span class="k">set</span> <span class="nv">imageFile</span> <span class="k">to</span> <span class="p">(</span><span class="nb">open for access</span> <span class="nv">filePath</span> <span class="nv">with</span> <span class="nb">write</span> <span class="nv">permission</span><span class="p">)</span>
</span><span class="line">		<span class="nb">set eof</span> <span class="nv">imageFile</span> <span class="k">to</span> <span class="mi">0</span>
</span><span class="line">		<span class="nb">write</span> <span class="p">(</span><span class="nb">the clipboard</span> <span class="k">as</span> <span class="p">(</span><span class="nb">first</span> <span class="nb">item</span> <span class="k">of</span> <span class="nv">theType</span><span class="p">))</span> <span class="k">to</span> <span class="nv">imageFile</span> <span class="c">-- as whatever</span>
</span><span class="line">		<span class="nb">close access</span> <span class="nv">imageFile</span>
</span><span class="line">		<span class="nb">set the clipboard to</span> <span class="nv">markdownUrl</span>
</span><span class="line">		<span class="k">try</span>
</span><span class="line">			<span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;System Events&quot;</span>
</span><span class="line">				<span class="nv">keystroke</span> <span class="s2">&quot;v&quot;</span> <span class="nv">using</span> <span class="nv">command</span> <span class="nv">down</span>
</span><span class="line">			<span class="k">end</span> <span class="k">tell</span>
</span><span class="line">		<span class="k">end</span> <span class="k">try</span>
</span><span class="line">	<span class="nb">on</span> <span class="k">error</span>
</span><span class="line">		<span class="k">try</span>
</span><span class="line">			<span class="nb">close access</span> <span class="nv">imageFile</span>
</span><span class="line">		<span class="k">end</span> <span class="k">try</span>
</span><span class="line">		<span class="no">return</span> <span class="s2">&quot;&quot;</span>
</span><span class="line">	<span class="k">end</span> <span class="k">try</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line">	<span class="no">return</span> <span class="s2">&quot;&quot;</span>
</span><span class="line"><span class="k">end</span> <span class="k">if</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后把Triggers和Action之间牵个红线……</p>

<p>然后Ctrl+Cmd+A，Ctrl+Cmd+V，</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/6cbd5c0748c60b083cce5b273789ffdd.png" alt="" /></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/7fe29cfc8f6451d4861c21743164a768.png" alt="" /></p>

<p>擦，很神奇的一个markdown的image标签就出现在你的编辑器里面了，文件也直接出现在你的图片目录里了，O(∩_∩)O，直接去deploy吧……</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用七牛为托管在github上面的静态博客加速]]></title>
    <link href="http://viecks.info/blog/2014/05/13/shi-yong-qi-niu-wei-tuo-guan-zai-githubshang-mian-de-jing-tai-bo-ke-jia-su/"/>
    <updated>2014-05-13T19:01:05+08:00</updated>
    <id>http://viecks.info/blog/2014/05/13/shi-yong-qi-niu-wei-tuo-guan-zai-githubshang-mian-de-jing-tai-bo-ke-jia-su</id>
    <content type="html"><![CDATA[<p>今天折腾了一下，把Blog的存储空间从七牛挪到github了。折腾的原因主要是七牛使用自定义域名太糟心了，各种备案各种麻烦。</p>

<p>迁移的过程很简单，在七牛托管时候用qrsync做deploy，切换到github以后直接用rake deploy搞定。</p>

<p>切到github以后，明显感觉图片加载速度有些慢，一怒把七牛的空间废物利用了一下，后续七牛就作为图床使用了。</p>

<!--more-->

<p>设置七牛加速github站点很容易，首先要有个七牛账号，这里不多说了，免费量又足。：）</p>

<p>然后建立一个空间，我这里随便起名为attaches-mirror。空间建立好以后，进入空间设置界面：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/fe3d60186f0d95d3d0cb4c63363ada09.png" alt="" /></p>

<p>进入<code>基本设置</code>-&gt;<code>镜像存储</code>，写上你要镜像加速的域名，这里是我的github路径：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/70376a785e3d4e2e69d58b52353e6bb9.png" alt="" /></p>

<p>点击确定就ok了。</p>

<p>然后在写东西的时候，注意图片的域名不要写相对路径了，要写类似于</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/baad8a4b3694392c14bca9f1ff0e4f65.png" alt="" /></p>

<p>这样的指向七牛镜像服务的url，其中/images开始的url和之前使用的相对路径一致。</p>

<p>在deploy的时候还是跟之前一样，不需要做任何修改。</p>

<p>七牛镜像加速基本原理是当有指向七牛的图片请求时，七牛会先看自己的空间下是否有该图片，如果不存在，则去上面设置的原始地址去取，同时在七牛下面保留一份，后续再有同样的请求时则直接由七牛返数据。</p>

<p>这么折腾完以后明显感觉图片加载快多了…… :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[暴力破解Alfred 2.3的Powerpack]]></title>
    <link href="http://viecks.info/blog/2014/05/13/bao-li-po-jie-alfred-2-dot-3de-powerpack/"/>
    <updated>2014-05-13T12:45:39+08:00</updated>
    <id>http://viecks.info/blog/2014/05/13/bao-li-po-jie-alfred-2-dot-3de-powerpack</id>
    <content type="html"><![CDATA[<p><strong style="color: red">免责声明：本文所述仅限于学习和研究之目的，请勿用于任何商业用途。是否使用本文所述技术取决与您，由此造成的一切后果本人不承担任何责任。</strong></p>

<p>今天收到了Alfred 2.3版本的AutoUpdate提醒。更新以后发现之前网上搜到的用于Alfred 2.x版本的破解补丁无法破解2.3版本了。没有办法，只能自己动手丰衣足食了……</p>

<!--more-->

<p>看下刚装完的Alfred 2.3，</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-4.png" alt="" /></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-5.png" alt="" /></p>

<p>果然残疾了……</p>

<p>先尝试用之前的Patcher对2.3版本的Alfred打Patch：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-1.png" alt="" /></p>

<p>擦，果然不Work了……</p>

<p>打开Alfred看下程序结构（在Alfred 2.app上右键显示包内容）：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-2.png" alt="" /></p>

<p>看到有<code>Alfred Framework</code>、<code>Growl</code>、<code>Alfred 2</code>三个可执行程序以及<code>Alfred Preferences.app</code>一个应用程序。</p>

<p>再打开<code>Alfred Preferences.app</code>看看：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-3.png" alt="" /></p>

<p>Ok，这里还有一个<code>Alfred Preferences</code>的可执行程序。</p>

<p>祭出神器Hopper，先打开<code>Alfred Preferences</code>看看。</p>

<p>先尝试找下提示需要注册Powerpack的字符串，在Strings里面搜索<code>Powerpack Required</code>:</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-6.png" alt="" /></p>

<p>找到了3个相关的字符串，定位到第一个，然后看Cross References：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-7.png" alt="" /></p>

<p>有个字符串类型的东西引用到它，再对这个字符串类型的东西做Cross References：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-8.png" alt="" /></p>

<p>(⊙o⊙)哦，有个函数引用了这个字符串，我们进去看看……</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-9.png" alt="" /></p>

<p>这里牛逼屌炸天的Hopper给我们提供了一个无比牛逼的功能，<code>Pseudo Code</code>，简单来说就是Hopper的HexRays，我们看下通过<code>Pseudo Code</code>得到的结果：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-10.png" alt="" /></p>

<p>我擦，真的屌炸天，对于我等汇编苦手来说，简直就是圣母福音。</p>

<p>不废话了，从这里看，很明显，Alfred调用了函数<code>isNgiw32TGS4363Aa</code>来判断用户是否购买了Powerpack，如果这个函数不返回<em>0x0</em>，则认为已经购买。</p>

<p>看看这个函数的实现：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-11.png" alt="" /></p>

<p>从代码上看，这里调用到得<code>isNgiw32TGS4363Aa</code>只是一个stub，真正的<code>isNgiw32TGS4363Aa</code>实现看来并不在这个可执行程序里。</p>

<p>先关掉这个<code>Alfred Preferences</code>，看看其他的程序中是否有<code>isNgiw32TGS4363Aa</code>的实现。</p>

<p>经过查找，发现<code>isNgiw32TGS4363Aa</code>是实现在<code>Alfred Framework</code>中的，我们用Hopper打开<code>Alfred Framework</code>，在Labels下面搜索<code>isNgiw32TGS4363Aa</code>：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-12.png" alt="" /></p>

<p>Bingo，got it</p>

<p>从代码上看，这个函数进一步调用了一个名为<code>isAgi23tAGIe35SG</code>的函数，并将这个函数的结果作为返回值返回给上层。</p>

<p>有兴趣搞清楚Alfred判断Powerpack是否购买的流程的同学可以进一步看看<code>isAgi23tAGIe35SG</code>，不过对于我来说，到这一步已经够了，直接暴力修改这里的代码，使得这个函数永远返回<em>0x1</em>理论上就足够了。让我们搞搞试试：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-13.png" alt="" /></p>

<p>修改完后，用Hopper的<code>Produce New Executable</code>保存修改后的<code>Alfred Framework</code>到桌面上。</p>

<p>用修改后的<code>Alfred Framework</code>替换Alfred 2.app中的文件，我们来试试修改是否生效：</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-14.png" alt="" /></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-17.png" alt="" /></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140513-16.png" alt="" /></p>

<p>貌似Work了……:D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用JadClipse在Eclipse中反编译Android的Class文件]]></title>
    <link href="http://viecks.info/blog/2014/05/09/shi-yong-jadclipsezai-eclipsezhong-fan-bian-yi-androidde-classwen-jian/"/>
    <updated>2014-05-09T16:09:27+08:00</updated>
    <id>http://viecks.info/blog/2014/05/09/shi-yong-jadclipsezai-eclipsezhong-fan-bian-yi-androidde-classwen-jian</id>
    <content type="html"><![CDATA[<p>今天在查找与Android反编译相关的资料时，发现了JAD和JadClipse。</p>

<p>和JD-GUI相比，Jad+JadClipse的组合与Eclipse的集成更好，不仅在反编译其他App的时候很方便，而且可以很方便的查看类似于appcompat之类的private library的源码。</p>

<p>这里记录一下怎么配置、安装JAD和JadClipse。</p>

<!-- more -->

<h4 id="jad">1、下载JAD</h4>

<p><a href="http://varaneckas.com/jad/">下载</a>适用于自己系统的jad版本，下载后解压得到一个可执行文件。将可执行文件放到任意目录。</p>

<h4 id="jadclipse">2、下载JadClipse</h4>

<p><a href="http://sourceforge.net/projects/jadclipse/">下载</a>JadClipse，解压后得到<code>net.sf.jadclipse_3.3.0.jar</code>放到Eclipse的Plugins目录下。</p>

<h4 id="jadclipse-1">3、配置JadClipse</h4>

<p>启动Eclipse后，在<code>Preferences-&gt;Java</code>下，应该出现了一个<code>JadClipse</code>的设置项。</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/2014-05-09_04-49-46.png" alt="" /></p>

<p>修改<code>Path to decompiler</code>为JAD可执行程序的路径。</p>

<h4 id="class">4、修改class文件关联</h4>

<p>在<code>Preferences-&gt;Editors-&gt;File Associations</code>中，找到<code>*.class</code>和<code>*.class without source</code>，将Associated editors的默认项设置为<code>JadClipse Class File Viewer</code>。</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/2014-05-09_04-56-26.png" alt="" /></p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140509-1.png" alt="" /></p>

<p>经过以上配置后，如果没有意外的话，在Eclipse中查看class文件应该就可以看到反编译以后的源码了。</p>

<p><img src="http://attaches-mirror.qiniudn.com/images/attaches/QQ20140509-2.png" alt="" /></p>
]]></content>
  </entry>
  
</feed>
